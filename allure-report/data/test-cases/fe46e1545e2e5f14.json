{"uid":"fe46e1545e2e5f14","name":"Auto Switch Tab in the Authorization Field (Personal account)","fullName":"Tests.test_AuthForm#test_auth_form_tab_personal_account_auto_switch","historyId":"f8c4f7a71c205b9799c02d765eaddfea","time":{"start":1695930352474,"stop":1695930363187,"duration":10713},"description":"\nVerify that the authentication selection tab changes automatically when entering an account number in \nthe authorization field.\n\nExpected result:\nAuthentication selection tab changes automatically when entering an account number in \nthe authorization field.\n","descriptionHtml":"<p>Verify that the authentication selection tab changes automatically when entering an account number in<br />\nthe authorization field.</p>\n<p>Expected result:<br />\nAuthentication selection tab changes automatically when entering an account number in<br />\nthe authorization field.</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"authform = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec02edc0>, checks = ['mail@mail.com', 'Почта', 't-btn-tab-mail']\n\n    @allure.id(\"RST-13\")\n    @allure.feature(\"Auto Switch Tab\")\n    @allure.suite(\"Authorization form\")\n    @allure.title(\"Auto Switch Tab in the Authorization Field (Personal account)\")\n    @allure.description(\"\"\"\n    Verify that the authentication selection tab changes automatically when entering an account number in\n    the authorization field.\n    \n    Expected result:\n    Authentication selection tab changes automatically when entering an account number in\n    the authorization field.\n    \"\"\")\n    @pytest.mark.parametrize(\"checks\", params_auth_form_value_auto_tab)\n    def test_auth_form_tab_personal_account_auto_switch(authform, checks):\n>       authform.auth_form_tab_personal_account_auto_switch(checks)\n\nTests/test_AuthForm.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages_Objects/AuthForm.py:112: in auth_form_tab_personal_account_auto_switch\n    self.tab_auto_switch (checks, \"Personal Account\", self.ls_tab)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec02edc0>, checks = ['mail@mail.com', 'Почта', 't-btn-tab-mail'], tabs_name = 'Personal Account'\ntab = ('id', 't-btn-tab-ls')\n\n    def tab_auto_switch(self, checks, tabs_name, tab):\n        self.go_to_site()\n    \n        with allure.step(f\"Click {tabs_name} tab\"):\n            self.do_element_click(tab)\n    \n        with allure.step(\"Click Login field\"):\n            self.do_element_click(self.auth_form_field_id)\n    \n        with allure.step(\"Set value to Login field\"):\n            self.do_element_send_keys(self.auth_form_field_id, checks[0])\n    \n        with allure.step(\"Click Pass field\"):\n            time.sleep(2)\n            self.do_element_click(self.auth_form_field_pass)\n    \n        with allure.step(\"Check tab switch (verify tab: color, name)\"):\n            color = self.get_color(self.get_param_element(checks[2]))\n            name = self.get_element_name(self.get_param_element(checks[2]))\n            if color == \"rgba(255, 79, 18, 1)\" and name == checks[1]:\n                assert True\n            else:\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"AutoSwitch_{checks[2]}\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               AssertionError\n\nPages_Objects/AuthForm.py:97: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1695930349930,"stop":1695930352470,"duration":2540},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"authform","time":{"start":1695930352471,"stop":1695930352472,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\nVerify that the authentication selection tab changes automatically when entering an account number in \nthe authorization field.\n\nExpected result:\nAuthentication selection tab changes automatically when entering an account number in \nthe authorization field.\n","status":"failed","statusMessage":"AssertionError","statusTrace":"authform = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec02edc0>, checks = ['mail@mail.com', 'Почта', 't-btn-tab-mail']\n\n    @allure.id(\"RST-13\")\n    @allure.feature(\"Auto Switch Tab\")\n    @allure.suite(\"Authorization form\")\n    @allure.title(\"Auto Switch Tab in the Authorization Field (Personal account)\")\n    @allure.description(\"\"\"\n    Verify that the authentication selection tab changes automatically when entering an account number in\n    the authorization field.\n    \n    Expected result:\n    Authentication selection tab changes automatically when entering an account number in\n    the authorization field.\n    \"\"\")\n    @pytest.mark.parametrize(\"checks\", params_auth_form_value_auto_tab)\n    def test_auth_form_tab_personal_account_auto_switch(authform, checks):\n>       authform.auth_form_tab_personal_account_auto_switch(checks)\n\nTests/test_AuthForm.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages_Objects/AuthForm.py:112: in auth_form_tab_personal_account_auto_switch\n    self.tab_auto_switch (checks, \"Personal Account\", self.ls_tab)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec02edc0>, checks = ['mail@mail.com', 'Почта', 't-btn-tab-mail'], tabs_name = 'Personal Account'\ntab = ('id', 't-btn-tab-ls')\n\n    def tab_auto_switch(self, checks, tabs_name, tab):\n        self.go_to_site()\n    \n        with allure.step(f\"Click {tabs_name} tab\"):\n            self.do_element_click(tab)\n    \n        with allure.step(\"Click Login field\"):\n            self.do_element_click(self.auth_form_field_id)\n    \n        with allure.step(\"Set value to Login field\"):\n            self.do_element_send_keys(self.auth_form_field_id, checks[0])\n    \n        with allure.step(\"Click Pass field\"):\n            time.sleep(2)\n            self.do_element_click(self.auth_form_field_pass)\n    \n        with allure.step(\"Check tab switch (verify tab: color, name)\"):\n            color = self.get_color(self.get_param_element(checks[2]))\n            name = self.get_element_name(self.get_param_element(checks[2]))\n            if color == \"rgba(255, 79, 18, 1)\" and name == checks[1]:\n                assert True\n            else:\n                allure.attach(self.driver.get_screenshot_as_png(), name=f\"AutoSwitch_{checks[2]}\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               AssertionError\n\nPages_Objects/AuthForm.py:97: AssertionError","steps":[{"name":"Go to site","time":{"start":1695930352474,"stop":1695930355272,"duration":2798},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click Personal Account tab","time":{"start":1695930355272,"stop":1695930360060,"duration":4788},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click Login field","time":{"start":1695930360060,"stop":1695930360191,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Set value to Login field","time":{"start":1695930360191,"stop":1695930360428,"duration":237},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click Pass field","time":{"start":1695930360428,"stop":1695930362533,"duration":2105},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check tab switch (verify tab: color, name)","time":{"start":1695930362534,"stop":1695930363186,"duration":652},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/fimasmf/Documents/Rostelecom_git/Rostelecom/Pages_Objects/AuthForm.py\", line 97, in tab_auto_switch\n    assert False\n","steps":[],"attachments":[{"uid":"38fbad558a5b7f1b","name":"AutoSwitch_t-btn-tab-mail","source":"38fbad558a5b7f1b.png","type":"image/png","size":148612}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":6,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1695930363203,"stop":1695930363800,"duration":597},"status":"passed","steps":[],"attachments":[{"uid":"5a3cf52552d7538f","name":"Screenshot","source":"5a3cf52552d7538f.png","type":"image/png","size":145898},{"uid":"d2d05594d7c8b374","name":"Browser Logs","source":"d2d05594d7c8b374.txt","type":"text/plain","size":2571}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true}],"labels":[{"name":"feature","value":"Auto Switch Tab"},{"name":"as_id","value":"RST-13"},{"name":"suite","value":"Authorization form"},{"name":"parentSuite","value":"Tests"},{"name":"host","value":"Fimas-MacBook-Pro.local"},{"name":"thread","value":"80478-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_AuthForm"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"checks","value":"['mail@mail.com', 'Почта', 't-btn-tab-mail']"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"fe46e1545e2e5f14.json","parameterValues":["['mail@mail.com', 'Почта', 't-btn-tab-mail']"]}