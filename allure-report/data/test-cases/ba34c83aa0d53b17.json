{"uid":"ba34c83aa0d53b17","name":"Masked Email Display on Email Confirmation Form","fullName":"Tests.test_RegisterForm#test_register_form_confirm_mail_masked","historyId":"1595b6ac470d3b45b5d078e136674422","time":{"start":1695931495810,"stop":1695931508009,"duration":12199},"description":"\nVerify that the entered email address is displayed in a masked format on the\nEmail Confirmation form after it has been provided during the registration process.\n\nExpected result:\nAfter the email address has been provided during the registration process and is displayed \non the Email Confirmation form: \nThe entered email address should be displayed in a masked format (e.g., \"user***@example.com\") \non the Email Confirmation form.         \n","descriptionHtml":"<p>Verify that the entered email address is displayed in a masked format on the<br />\nEmail Confirmation form after it has been provided during the registration process.</p>\n<p>Expected result:<br />\nAfter the email address has been provided during the registration process and is displayed<br />\non the Email Confirmation form:<br />\nThe entered email address should be displayed in a masked format (e.g., &quot;user***@example.com&quot;)<br />\non the Email Confirmation form.</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"register = <Pages_Objects.RegisterForm.RegisterForm object at 0x7fc6ec0a5ee0>\n\n    @allure.id(\"RST-39\")\n    @allure.feature(\"Email masked\")\n    @allure.suite(\"Registration form\")\n    @allure.title(\"Masked Email Display on Email Confirmation Form\")\n    @allure.description(\"\"\"\n    Verify that the entered email address is displayed in a masked format on the\n    Email Confirmation form after it has been provided during the registration process.\n    \n    Expected result:\n    After the email address has been provided during the registration process and is displayed\n    on the Email Confirmation form:\n    The entered email address should be displayed in a masked format (e.g., \"user***@example.com\")\n    on the Email Confirmation form.\n    \"\"\")\n    def test_register_form_confirm_mail_masked(register):\n>       register.register_form_confirm_mail_masked()\n\nTests/test_RegisterForm.py:267: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages_Objects.RegisterForm.RegisterForm object at 0x7fc6ec0a5ee0>\n\n    def register_form_confirm_mail_masked(self):\n        self.register_form_go_to_form()\n        user_email = self.register_form_fill_fields()\n    \n        with allure.step(\"Check user mail is masked\"):\n            assert self.element_displayed(RConfirmForm.r_confirm_codemail_hide_mail)\n            masked_mail = self.get_element_name(RConfirmForm.r_confirm_codemail_hide_mail)\n            found = user_email in masked_mail\n    \n            if found == False:\n                assert True\n            else:\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"Masked mail\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               AssertionError\n\nPages_Objects/RegisterForm.py:215: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1695931493263,"stop":1695931495807,"duration":2544},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"register","time":{"start":1695931495808,"stop":1695931495810,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\nVerify that the entered email address is displayed in a masked format on the\nEmail Confirmation form after it has been provided during the registration process.\n\nExpected result:\nAfter the email address has been provided during the registration process and is displayed \non the Email Confirmation form: \nThe entered email address should be displayed in a masked format (e.g., \"user***@example.com\") \non the Email Confirmation form.         \n","status":"failed","statusMessage":"AssertionError","statusTrace":"register = <Pages_Objects.RegisterForm.RegisterForm object at 0x7fc6ec0a5ee0>\n\n    @allure.id(\"RST-39\")\n    @allure.feature(\"Email masked\")\n    @allure.suite(\"Registration form\")\n    @allure.title(\"Masked Email Display on Email Confirmation Form\")\n    @allure.description(\"\"\"\n    Verify that the entered email address is displayed in a masked format on the\n    Email Confirmation form after it has been provided during the registration process.\n    \n    Expected result:\n    After the email address has been provided during the registration process and is displayed\n    on the Email Confirmation form:\n    The entered email address should be displayed in a masked format (e.g., \"user***@example.com\")\n    on the Email Confirmation form.\n    \"\"\")\n    def test_register_form_confirm_mail_masked(register):\n>       register.register_form_confirm_mail_masked()\n\nTests/test_RegisterForm.py:267: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Pages_Objects.RegisterForm.RegisterForm object at 0x7fc6ec0a5ee0>\n\n    def register_form_confirm_mail_masked(self):\n        self.register_form_go_to_form()\n        user_email = self.register_form_fill_fields()\n    \n        with allure.step(\"Check user mail is masked\"):\n            assert self.element_displayed(RConfirmForm.r_confirm_codemail_hide_mail)\n            masked_mail = self.get_element_name(RConfirmForm.r_confirm_codemail_hide_mail)\n            found = user_email in masked_mail\n    \n            if found == False:\n                assert True\n            else:\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"Masked mail\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               AssertionError\n\nPages_Objects/RegisterForm.py:215: AssertionError","steps":[{"name":"Go to site","time":{"start":1695931495811,"stop":1695931496982,"duration":1171},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Registration' link down the Auth form on the main page","time":{"start":1695931496983,"stop":1695931505668,"duration":8685},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click and Set value to 'name' field","time":{"start":1695931505791,"stop":1695931506112,"duration":321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click and Set value to 'lastname' field","time":{"start":1695931506112,"stop":1695931506229,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click and Set value to 'phone or email' field (email)","time":{"start":1695931506229,"stop":1695931506405,"duration":176},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click and Set value to 'password' field","time":{"start":1695931506405,"stop":1695931506580,"duration":175},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click and Set value to 'confirm password' field","time":{"start":1695931506580,"stop":1695931506767,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Click 'Registration' button","time":{"start":1695931506831,"stop":1695931507396,"duration":565},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check user mail is masked","time":{"start":1695931507396,"stop":1695931508007,"duration":611},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/fimasmf/Documents/Rostelecom_git/Rostelecom/Pages_Objects/RegisterForm.py\", line 215, in register_form_confirm_mail_masked\n    assert False\n","steps":[],"attachments":[{"uid":"b71d25e8ba0dc92c","name":"Masked mail","source":"b71d25e8ba0dc92c.png","type":"image/png","size":169427}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":9,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1695931508027,"stop":1695931508621,"duration":594},"status":"passed","steps":[],"attachments":[{"uid":"1fa9e155832111a8","name":"Screenshot","source":"1fa9e155832111a8.png","type":"image/png","size":169399},{"uid":"2a31a5feb5fcb55f","name":"Browser Logs","source":"2a31a5feb5fcb55f.txt","type":"text/plain","size":3659}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true}],"labels":[{"name":"suite","value":"Registration form"},{"name":"as_id","value":"RST-39"},{"name":"feature","value":"Email masked"},{"name":"parentSuite","value":"Tests"},{"name":"host","value":"Fimas-MacBook-Pro.local"},{"name":"thread","value":"80478-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_RegisterForm"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ba34c83aa0d53b17.json","parameterValues":[]}