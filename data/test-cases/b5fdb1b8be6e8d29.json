{"uid":"b5fdb1b8be6e8d29","name":"Check tabs names on Authorization form","fullName":"Tests.test_AuthForm#test_auth_form_check_tabs_names","historyId":"759bad16d97644eceaef9149d4dfeea3","time":{"start":1695930096264,"stop":1695930105372,"duration":9108},"description":"\nCheck tabs names on the authorization form are match the requirements.\n\nExpected result:\nAll tabs name are match the requirements.\n","descriptionHtml":"<p>Check tabs names on the authorization form are match the requirements.</p>\n<p>Expected result:<br />\nAll tabs name are match the requirements.</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"authform = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec0d6df0>, tabs = 't-btn-tab-phone', tab_name = 'Номер'\n\n    @allure.id(\"RST-7\")\n    @allure.feature(\"tabs names\")\n    @allure.suite(\"Authorization form\")\n    @allure.title(\"Check tabs names on Authorization form\")\n    @allure.description(\"\"\"\n    Check tabs names on the authorization form are match the requirements.\n    \n    Expected result:\n    All tabs name are match the requirements.\n    \"\"\")\n    @pytest.mark.parametrize((\"tabs\", \"tab_name\"), params_auth_form_tabs_name_requirement)\n    def test_auth_form_check_tabs_names(authform, tabs, tab_name):\n>       authform.auth_form_check_tabs_names(tabs, tab_name)\n\nTests/test_AuthForm.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec0d6df0>, tabs = 't-btn-tab-phone', tab_name = 'Номер'\n\n    def auth_form_check_tabs_names(self, tabs, tab_name):\n        self.go_to_site()\n    \n        with allure.step(\"Find tab in Auth form\"):\n            element = self.get_element(self.get_param_element(tabs))\n    \n        with allure.step(\"Check tab's name\"):\n            tab_element = self.get_element_name(self.get_param_element(tabs))\n            assert element.is_displayed()\n            if tab_element == tab_name:\n                assert True\n            else:\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"TabNames\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               AssertionError\n\nPages_Objects/AuthForm.py:45: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1695930093567,"stop":1695930096259,"duration":2692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"authform","time":{"start":1695930096259,"stop":1695930096262,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"\nCheck tabs names on the authorization form are match the requirements.\n\nExpected result:\nAll tabs name are match the requirements.\n","status":"failed","statusMessage":"AssertionError","statusTrace":"authform = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec0d6df0>, tabs = 't-btn-tab-phone', tab_name = 'Номер'\n\n    @allure.id(\"RST-7\")\n    @allure.feature(\"tabs names\")\n    @allure.suite(\"Authorization form\")\n    @allure.title(\"Check tabs names on Authorization form\")\n    @allure.description(\"\"\"\n    Check tabs names on the authorization form are match the requirements.\n    \n    Expected result:\n    All tabs name are match the requirements.\n    \"\"\")\n    @pytest.mark.parametrize((\"tabs\", \"tab_name\"), params_auth_form_tabs_name_requirement)\n    def test_auth_form_check_tabs_names(authform, tabs, tab_name):\n>       authform.auth_form_check_tabs_names(tabs, tab_name)\n\nTests/test_AuthForm.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages_Objects.AuthForm.AuthForm object at 0x7fc6ec0d6df0>, tabs = 't-btn-tab-phone', tab_name = 'Номер'\n\n    def auth_form_check_tabs_names(self, tabs, tab_name):\n        self.go_to_site()\n    \n        with allure.step(\"Find tab in Auth form\"):\n            element = self.get_element(self.get_param_element(tabs))\n    \n        with allure.step(\"Check tab's name\"):\n            tab_element = self.get_element_name(self.get_param_element(tabs))\n            assert element.is_displayed()\n            if tab_element == tab_name:\n                assert True\n            else:\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"TabNames\",\n                              attachment_type=AttachmentType.PNG)\n>               assert False\nE               AssertionError\n\nPages_Objects/AuthForm.py:45: AssertionError","steps":[{"name":"Go to site","time":{"start":1695930096265,"stop":1695930097624,"duration":1359},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Find tab in Auth form","time":{"start":1695930097625,"stop":1695930104747,"duration":7122},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Check tab's name","time":{"start":1695930104747,"stop":1695930105370,"duration":623},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/fimasmf/Documents/Rostelecom_git/Rostelecom/Pages_Objects/AuthForm.py\", line 45, in auth_form_check_tabs_names\n    assert False\n","steps":[],"attachments":[{"uid":"6ea04bb49120949c","name":"TabNames","source":"6ea04bb49120949c.png","type":"image/png","size":140352}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser::0","time":{"start":1695930105499,"stop":1695930106193,"duration":694},"status":"passed","steps":[],"attachments":[{"uid":"52ded60098ef6939","name":"Screenshot","source":"52ded60098ef6939.png","type":"image/png","size":140352},{"uid":"c1f2571abc53113b","name":"Browser Logs","source":"c1f2571abc53113b.txt","type":"text/plain","size":2571}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true}],"labels":[{"name":"as_id","value":"RST-7"},{"name":"suite","value":"Authorization form"},{"name":"feature","value":"tabs names"},{"name":"parentSuite","value":"Tests"},{"name":"host","value":"Fimas-MacBook-Pro.local"},{"name":"thread","value":"80478-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_AuthForm"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"tab_name","value":"'Номер'"},{"name":"tabs","value":"'t-btn-tab-phone'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b5fdb1b8be6e8d29.json","parameterValues":["'Номер'","'t-btn-tab-phone'"]}